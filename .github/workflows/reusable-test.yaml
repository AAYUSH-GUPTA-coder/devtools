#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
#
#        Reusable workflow that runs the whole test suite, linter and build
#
#   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-.   .-.-  .-.-.   .-.-.   .-.-
#  / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ \ / / \ / / \ \ / / \ \ / / \
# `-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-`-'   `-'   `-`-'   `-`-'
name: Vape Tests

on:
  workflow_call:

# We'll default the NPM_TOKEN to an empty value since we use it
# in .npmrc file and if undefined, the node setup would fail
env:
  NPM_TOKEN: ""

jobs:
  build:
    name: Build & Lint
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read

    # We'll run the job on the prebuilt base image
    container:
      image: ghcr.io/layerzero-labs/devtools-dev-base:main

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Setup environment
        uses: ./.github/workflows/actions/setup-environment

      - name: Install dependencies
        uses: ./.github/workflows/actions/install-dependencies

      - name: Setup build cache
        uses: ./.github/workflows/actions/setup-build-cache

      - name: Lint
        run: pnpm lint

      # We'll run the build in series to avoid race conditions
      # when compiling hardhat projects in monorepo setups
      - name: Build
        run: pnpm build --concurrency=1

  test:
    name: Test
    runs-on: ubuntu-latest-4xlarge

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Setup environment
        uses: ./.github/workflows/actions/setup-environment

      - name: Setup build cache
        uses: ./.github/workflows/actions/setup-build-cache

      # There is a small bug in docker compose that will cause 401 if we don't pull the base image manually
      #
      # See more here https://github.com/docker/compose-cli/issues/1545
      - name: Authenticate to GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Test
        run: pnpm test:ci
        env:
          # We'll use the prebuilt base image
          DEVTOOLS_BASE_IMAGE: ghcr.io/layerzero-labs/devtools-dev-base:main
          # And the prebuilt hardhat EVM node image
          DEVTOOLS_EVM_NODE_IMAGE: ghcr.io/layerzero-labs/devtools-dev-node-evm-hardhat:main

      # We'll collect the docker compose logs from all containers on failure
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: "./logs"

      # We'll collect the docker compose logs from all containers on failure
      - name: Store docker logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          path: ./logs

  test-user:
    name: User test
    runs-on: ubuntu-latest-4xlarge

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Setup environment
        uses: ./.github/workflows/actions/setup-environment

      # There is a small bug in docker compose that will cause 401 if we don't pull the base image manually
      #
      # See more here https://github.com/docker/compose-cli/issues/1545
      - name: Authenticate to GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Test
        run: pnpm test:user
        env:
          LAYERZERO_EXAMPLES_REPOSITORY_URL: https://github.com/${{ github.repository }}.git
          LAYERZERO_EXAMPLES_REPOSITORY_REF: ${{ github.ref }}
          # We'll use the prebuilt base image
          DEVTOOLS_BASE_IMAGE: ghcr.io/layerzero-labs/devtools-dev-base:main
          # And the prebuilt hardhat EVM node image
          DEVTOOLS_EVM_NODE_IMAGE: ghcr.io/layerzero-labs/devtools-dev-node-evm-hardhat:main

      # We'll collect the docker compose logs from all containers on failure
      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: "./logs"

      # We'll collect the docker compose logs from all containers on failure
      - name: Store docker logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          path: ./logs

  debug-publish:
    name: Publish
    runs-on: ubuntu-latest

    # We'll run the job on the prebuilt base image
    container:
      image: ghcr.io/layerzero-labs/devtools-dev-base:main

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: "true"
          token: ${{ secrets.LAYERZERO_BOT_GITHUB_TOKEN }}

      - name: Setup environment
        uses: ./.github/workflows/actions/setup-environment

      - name: Install dependencies
        uses: ./.github/workflows/actions/install-dependencies

      - name: Setup build cache
        uses: ./.github/workflows/actions/setup-build-cache

      # This step uses the changesets CLI to bump the package versions and/or publish the unpublished packages
      #
      # How this works is:
      #
      # - If there are any changesets (markdown files in the .changeset directory),
      #   changesets CLI will bump the package versions according to the bumps specified in the markdown files.
      #
      # - A PR is created containing these version bumps and with the changeset markdowns deleted
      #
      # - Once this PR is merged, this workflow kicks in again and this time checks
      #   whether there is anything that needs to be published
      - name: Publish packages / create version bump PRs
        uses: changesets/action@v1
        with:
          version: git status
          publish: git status
          title: "ðŸš€ Version packages"

        env:
          # This is here because changesets/action will look for the .npmrc
          # in HOME folder and if it doesn't find one there it will create one
          #
          # Since we want to make sure it uses our .npmrc we'll just point it
          # to our workspace root (which, in a workflow that uses a container, is put under __w directory)
          #
          # Here we need to use the ${GITHUB_WORKSPACE} environment variable instead
          # of the context value ${{ github.workspace }}
          #
          # See more here https://github.com/actions/runner/issues/2058
          HOME: ${GITHUB_WORKSPACE}
